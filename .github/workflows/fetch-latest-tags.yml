name: Check for New Release Tags

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  check-latest-tags:
    runs-on: ubuntu-latest
    outputs:
      update_found: ${{ steps.compare_tags.outputs.update_found }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore previous tags from cache
        id: cache-latest-tags
        uses: actions/cache@v4
        with:
          path: latest-tags.txt
          key: latest-tags-${{ github.ref_name }}
          restore-keys: latest-tags-${{ github.ref_name }}

      - name: Fetch latest release tags
        run: |
          echo "Fetching latest release tags..."
          ZILEAN_TAG=$(curl -s https://api.github.com/repos/iPromKnight/zilean/releases/latest | jq -r .tag_name)
          RIVEN_TAG=$(curl -s https://api.github.com/repos/rivenmedia/riven/releases/latest | jq -r .tag_name)
          RIVEN_FRONTEND_TAG=$(curl -s https://api.github.com/repos/rivenmedia/riven-frontend/releases/latest | jq -r .tag_name)
          DMB_FRONTED_TAG=$(curl -s https://api.github.com/repos/nicocapalbo/dmbdb/releases/latest | jq -r .tag_name)

          echo "ZILEAN_TAG=$ZILEAN_TAG" >> $GITHUB_ENV
          echo "RIVEN_TAG=$RIVEN_TAG" >> $GITHUB_ENV
          echo "RIVEN_FRONTEND_TAG=$RIVEN_FRONTEND_TAG" >> $GITHUB_ENV
          echo "DMB_FRONTEND_TAG=$DMB_FRONTEND_TAG" >> $GITHUB_ENV

      - name: Load previous tags
        id: load_previous
        run: |
          if [ -f latest-tags.txt ]; then
            echo "Previous tags found:"
            cat latest-tags.txt
            echo "PREV_TAGS_FOUND=true" >> $GITHUB_ENV
          else
            echo "No previous tags found."
            echo "PREV_TAGS_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Compare tags and detect changes
        id: compare_tags
        run: |
          if [ "$PREV_TAGS_FOUND" == "true" ]; then
            DIFF=$(diff latest-tags.txt <(echo -e "$ZILEAN_TAG\n$RIVEN_TAG\n$RIVEN_FRONTEND_TAG\n$DMB_FRONTEND_TAG") || true)
            if [ -n "$DIFF" ]; then
              echo "New versions found!"
              echo "update_found=true" >> $GITHUB_ENV
            else
              echo "No updates found."
              echo "update_found=false" >> $GITHUB_ENV
            fi
          else
            echo "First run - proceeding with build."
            echo "update_found=true" >> $GITHUB_ENV
          fi

      - name: Store latest tags in cache
        run: echo -e "$ZILEAN_TAG\n$RIVEN_TAG\n$RIVEN_FRONTEND_TAG\n$DMB_FRONTEND_TAG" > latest-tags.txt

      - name: Delete previous cache (Ensures fresh cache per branch)
        run: |
          gh cache delete latest-tags-${{ github.ref_name }} || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save latest tags to cache (Branch-specific)
        uses: actions/cache@v4
        with:
          path: latest-tags.txt
          key: latest-tags-${{ github.ref_name }}
          restore-keys: latest-tags-${{ github.ref_name }}

      - name: Trigger Docker CI if new versions found
        if: env.update_found == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Docker Image CI
          token: ${{ secrets.GITHUB_TOKEN }}
